apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: servicelevelobjectives.sedai.dev
spec:
  group: sedai.dev
  names:
    kind: ServiceLevelObjective
    listKind: ServiceLevelObjectiveList
    plural: servicelevelobjectives
    shortNames:
    - slo
    singular: servicelevelobjective
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.service
      name: SERVICE
      type: string
    - jsonPath: .spec.window
      name: Window
      type: string
    - jsonPath: .spec.target
      name: Target
      type: string
    - jsonPath: .status.type
      name: Type
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceLevelObjective is the Schema for the ServiceLevelObjectives API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          service:
            description: Service is the application of the SLOs.
            type: string
          spec:
            description: ServiceLevelObjectiveSpec defines the desired state of ServiceLevelObjective.
            properties:
              slos:
                description: SLOs are the SLOs of the service.
                items:
                  properties:
                    name:
                      type: string
                    indicator:
                      description: |-
                        ServiceLevelIndicator is the underlying data source that indicates how the service is doing.
                        This will be a monitoring provider metric with specific selectors for your service.
                      properties:
                        raw:
                          description: |-
                            Raw is the raw SLI type. it describes a single query that will get the success criteria for the SLO.
                          properties:
                            grouping:
                              description: allow you to track uptime for individual groups, The groups can defined in the “group by” portion of the metric query.
                              items:
                                type: string
                              type: array
                            metrics:
                              description: |-
                                Typed metrics
                              properties:
                                filters:
                                  description: |-
                                    Filters takes a key, value pair and allows you to filter based on supported labels. 
                                    The latency threshold can be specified as >= latency threshold supported key `latencyThreshold` 
                                    and `latencyOperator` with values le, ge, lt, gt
                                  items:
                                    type: object
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                      operator:
                                        type: string
                                  type: array
                                metric:
                                  type: string
                                sliAggregationInterval:
                                  description: This is the interval for slicing the timeseries into equal-duration intervals in seconds
                                  type: string
                                sliAggregationStats:
                                  description: This is the aggregation for slicing the timeseries into equal-duration intervals
                                  type: string
                              required:
                              - metric
                              - sliAggregationInterval
                              - sliAggregationStats
                              type: object
                            queryLanguage:
                              description: Define a promql query. Supported only for prom like providers.
                              properties:
                                qlType:
                                  type: string
                                query:
                                  description: Specify the uptime success query. For latency queries, the latency threshold can be specified as >= latency threshold or any promql supported comparator
                                  type: string
                                sliAggregationInterval:
                                  description: This is the interval for slicing the timeseries into equal-duration intervals in seconds
                                  type: string
                                sliAggregationStats:
                                  description: This is the aggregation for slicing the timeseries into equal-duration intervals
                                  type: string
                              required:
                              - query
                              - sliAggregationInterval
                              - sliAggregationStats
                              type: object
                          oneOf:
                          - required: ["metrics"]
                          - required: ["queryLanguage"]
                          type: object
                        requestRatio:
                          description: Ratio is the indicator that measures against success / total events.
                          properties:
                            grouping:
                              description: allow you to track uptime for individual groups, The groups can defined in the “group by” portion of the metric query.
                              items:
                                type: string
                              type: array
                            metrics:
                              properties:
                                numeratorMetrics:
                                  description: numeratorMetrics is the metric that returns success there are.
                                  properties:
                                    metric:
                                      type: string
                                    filters:
                                      description: |-
                                        Filters takes a key, value pair and allows you to filter based on supported labels.
                                        The latency threshold can be specified as filter supported key `latencyThreshold` 
                                        and `latencyOperator` with values le, ge, lt, gt
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string 
                                          operator:
                                            type: string                               
                                      type: array                                      
                                  required:
                                  - metric
                                  type: object
                                denominatorMetrics:
                                  description: denominatorMetrics is the metric that returns how many requests there are in total.
                                  properties:
                                    metric:
                                      type: string
                                    filters:
                                      description: |-
                                        Filters takes a key, value pair and allows you to filter based on supported labels.
                                        The latency threshold can be specified as filter supported key `latencyThreshold` 
                                        and `latencyOperator` with values le, ge, lt, gt
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string 
                                          operator:
                                            type: string                               
                                      type: array
                                  required:
                                  - metric
                                  type: object
                                sliAggregationInterval:
                                  description: This is the interval for slicing the timeseries into equal-duration intervals in seconds
                                  type: string
                                sliAggregationStats:
                                  description: This is the aggregation for slicing the timeseries into equal-duration intervals
                                  type: string
                              required:
                              - numeratorMetrics
                              - denominatorMetrics
                              - sliAggregationInterval
                              - sliAggregationStats
                              type: object
                            queryLanguage:
                              properties:
                                qlType:
                                  type: string
                                numeratorQuery:
                                  type: string
                                denominatorQuery:
                                  type: string
                                sliAggregationInterval:
                                  description: This is the interval for slicing the timeseries into equal-duration intervals in seconds
                                  type: string
                                sliAggregationStats:
                                  description: This is the aggregation for slicing the timeseries into equal-duration intervals
                                  type: string
                              required:
                              - numeratorQuery
                              - denominatorQuery
                              - sliAggregationInterval
                              - sliAggregationStats
                              type: object
                          oneOf:
                          - required: ["metrics"]
                          - required: ["queryLanguage"]
                          type: object
                        windowedRatio:
                          description:  |-
                            Ratio is the indicator that measures against successful / total events over fixed time windows. 
                            Services with periodic bulk operations or batch processes are sbest suited for this
                          properties:
                            grouping:
                              description: allow you to track uptime for individual groups, The groups can defined in the “group by” portion of the metric query.
                              items:
                                type: string
                              type: array
                            metric:
                              properties:
                                perWindowInterval:
                                  description: Smaller Fixed time window over which Metrics are evaluated.
                                  type: string
                                perWindowAggregation:
                                  description: Smaller Fixed time window over which Metrics are evaluated.
                                  type: string
                                numeratorMetrics:
                                  description: numeratorMetrics is the metric that returns Percentage of successful windows .
                                  properties:
                                    metric:
                                      type: string
                                    filters:
                                      description: |-
                                        Filters takes a key, value pair and allows you to filter based on supported labels.
                                        For latency, please specify a filter "le" to specify the threshold latency 
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string  
                                          operator:
                                            type: string                              
                                      type: array
                                  required:
                                  - metric
                                  type: object
                                denominatorMetrics:
                                  description: denominatorMetrics is the metric that returns total windows.
                                  properties:
                                    metric:
                                      type: string
                                    filters:
                                      description: |-
                                        Filters takes a key, value pair and allows you to filter based on supported labels.
                                        For latency, please specify a filter "le" to specify the threshold latency 
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string  
                                          operator:
                                            type: string                              
                                      type: array
                                  required:
                                  - metric
                                  type: object
                              required:
                              - numeratorMetrics
                              - denominatorMetrics
                              - perWindowAggregation
                              - perWindowInterval
                              type: object
                            queryLanguage:
                              properties:
                                qlType:
                                  type: string
                                numeratorQuery:
                                  type: string
                                denominatorQuery:
                                  type: string
                              required:
                              - numeratorQuery
                              - denominatorQuery
                              type: object
                          oneOf:
                          - required: ["metrics"]
                          - required: ["queryLanguage"]
                          type: object
                      type: object
                    target:
                      description: |-
                        Target is a string that's casted to a float64 between 0 - 100.
                        It represents the desired availability of the service in the given window.
                        It can also represent percentage of successful windows for the windowedRatio
                        float64 are not supported: https://github.com/kubernetes-sigs/controller-tools/issues/245
                      type: string
                    window:
                      description: Window within which the Target is supposed to be kept. Usually something like 1d, 7d or 28d.
                      type: string
                    description:
                      description: |-
                        Description describes the ServiceLevelObjective in more detail and
                        gives extra context for engineers that might not directly work on the service.
                      type: string
                  required:
                  - indicator
                  - target
                  - window
                  - name
                  type: object 
                minItems: 1
                type: array
            type: object
            required:
            - slos
          status:
            description: ServiceLevelObjectiveStatus defines the observed state of ServiceLevelObjective.
            properties:
              type:
                description: Type is the generated resource type, like PrometheusRule or ConfigMap
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}