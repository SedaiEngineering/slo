apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: servicelevelobjectives.sedai.dev
spec:
  group: sedai.dev
  names:
    kind: ServiceLevelObjective
    listKind: ServiceLevelObjectiveList
    plural: servicelevelobjectives
    shortNames:
    - slo
    singular: servicelevelobjective
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.window
      name: Window
      type: string
    - jsonPath: .spec.target
      name: Target
      type: string
    - jsonPath: .status.type
      name: Type
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceLevelObjective is the Schema for the ServiceLevelObjectives API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServiceLevelObjectiveSpec defines the desired state of ServiceLevelObjective.
            properties:
              slos:
                description: SLOs are the SLOs of the service.
                items:
                  properties:
                    name:
                      type: string
                    indicator:
                      description: |-
                        ServiceLevelIndicator is the underlying data source that indicates how the service is doing.
                        This will be a monitoring provider metric with specific selectors for your service.
                      properties:
                        raw:
                          description: |-
                            Raw is the raw SLI type. it describes a single query that will get the success criteria for the SLO.
                          properties:
                            rawMetric:
                              description: |-
                                Typed metrics
                              properties:
                                category: 
                                  description: |-
                                    category can be any of these LATENCY, AVAILABILITY, ERRORS
                                  type: string
                                  enum: ["LATENCY", "AVAILABILITY", "ERRORS"]
                                filters:
                                  description: |-
                                    Filters takes a key, value pair and allows you to filter based on supported labels. 
                                  items:
                                    type: object
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                      operator:
                                        type: string
                                  type: array
                                successMetricName:
                                  type: string
                                sliAggregationIntervalms:
                                  description: This is the interval for slicing the timeseries into equal-duration intervals in seconds
                                  type: string
                                  default: "120000"
                                sliAggregationStats:
                                  description: This is the aggregation for slicing the timeseries into equal-duration intervals
                                  type: string
                                  default: "avg"
                                latencyThreshold:
                                  description: |-
                                    The latency threshold can be specified as >= latency threshold supported key `latencyThreshold` 
                                  type: string
                                latencyOperator:
                                  description: |-
                                    latencyOperator with values le, ge, ge, gt
                                  enum: ["le", "ge", "ge", "gt"]
                                  type: string
                              required:
                              - successMetricName
                              - sliAggregationIntervalms
                              - sliAggregationStats
                              - category
                              type: object
                            rawQueryLanguage:
                              description: Define a promql query. Supported only for prom like providers.
                              properties:
                                category: 
                                  description: |-
                                    category can be any of these LATENCY, AVAILABILITY, ERRORS
                                  type: string
                                  enum: ["LATENCY", "AVAILABILITY", "ERRORS"]
                                latencyThreshold:
                                  description: |-
                                    The latency threshold can be specified as >= latency threshold supported key `latencyThreshold` 
                                  type: string
                                latencyOperator:
                                  description: |-
                                    latencyOperator with values le, ge, ge, gt
                                  enum: ["le", "ge", "ge", "gt"]
                                  type: string
                                qlType:
                                  type: string
                                successQuery:
                                  description: |- 
                                    Specify the uptime success query. For latency queries, the success latency threshold shoul be specified as latency threshold additionally .
                                    The expectation is that it will return a vertically aggregated single time series grouped by service name, namespace etc. 
                                    which can be mapped to infra.
                                    and then sedai will aggregate it further based on the sliAggregationIntervalms
                                  type: string
                                sliAggregationIntervalms:
                                  description: This is the interval for slicing the timeseries into equal-duration intervals in seconds
                                  type: string
                                  default: "120000"
                                sliAggregationStats:
                                  description: This is the aggregation for slicing the timeseries into equal-duration intervals
                                  type: string
                                  default: "avg"
                              required:
                              - successQuery
                              - sliAggregationIntervalms
                              - sliAggregationStats
                              - category
                              type: object
                          oneOf:
                          - required: ["rawMetric"]
                          - required: ["rawQueryLanguage"]
                          type: object
                        requestRatio:
                          description: |-
                            Ratio is the indicator that measures against success / total events. The metrics should be a count or rate for this
                            This is event based, so no aggregation is allowed on the count or rate
                            If you have specific aggregation needs, pelase use windowed ratio.
                          properties:
                            requestMetric:
                              properties:
                                category: 
                                  description: |-
                                    category can be any of these LATENCY, AVAILABILITY, ERRORS
                                  type: string
                                  enum: ["LATENCY", "AVAILABILITY", "ERRORS"]
                                numeratorSuccessMetrics:
                                  description: numeratorSuccessMetrics is the metric that returns successs there are.
                                  properties:
                                    metricName:
                                      type: string
                                    filters:
                                      description: |-
                                        Filters takes a key, value pair and allows you to filter based on supported labels.
                                        For latency, please specify a filter "le","gt" etc. to specify the threshold latency 
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string 
                                          operator:
                                            type: string                               
                                      type: array                                   
                                  required:
                                  - metricName
                                  type: object
                                denominatorTotalMetrics:
                                  description: denominatorMetrics is the metric that returns how many requests there are in total.
                                  properties:
                                    metricName:
                                      type: string
                                    filters:
                                      description: |-
                                        Filters takes a key, value pair and allows you to filter based on supported labels.
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string 
                                          operator:
                                            type: string                               
                                      type: array
                                  required:
                                  - metricName
                                  type: object
                                sliAggregationIntervalms:
                                  description: This is the interval for slicing the timeseries into equal-duration intervals in milliseconds
                                  type: string
                                  default: "120000"
                              required:
                              - numeratorSuccessMetrics
                              - denominatorTotalMetrics
                              - sliAggregationIntervalms
                              - category
                              type: object
                            requestQueryLanguage:
                              properties:
                                category: 
                                  description: |-
                                    category can be any of these LATENCY, AVAILABILITY, ERRORS
                                  type: string
                                  enum: ["LATENCY", "AVAILABILITY", "ERRORS"]
                                qlType:
                                  type: string
                                numeratorSuccessQuery:
                                  description: |-
                                    These queries should return a sum in the smaller SLI aggregation window and The SLI aggregation window allowed is 1-10m
                                  type: string
                                denominatorTotalQuery:
                                  description: |-
                                    These queries should return a sum in the smaller SLI aggregation window and The SLI aggregation window allowed is 1-10m
                                  type: string
                              required:
                              - numeratorSuccessQuery
                              - denominatorTotalQuery
                              - category
                              type: object
                          oneOf:
                          - required: ["requestMetric"]
                          - required: ["requestQueryLanguage"]
                          type: object
                        windowedRatio:
                          description:  |-
                            Ratio is the indicator that measures against success / total events over fixed time windows. 
                            Services with periodic bulk operations or batch processes are sbest suited for this. 
                            This also need both ratio metrics to be from the same monitoring provider.
                          properties:
                            windowMetric:
                              properties:
                                category: 
                                  description: |-
                                    category can be any of these LATENCY, AVAILABILITY, ERRORS
                                  type: string
                                perWindowInterval:
                                  description: Smaller Fixed time window over which Metrics are evaluated.
                                  type: string
                                perWindowAggregation:
                                  description: Smaller Fixed time window over which Metrics are evaluated.
                                  type: string
                                numeratorSuccessMetrics:
                                  description: numeratorMetrics is the metric that returns Percentage of success windows .
                                  properties:
                                    metricName:
                                      type: string
                                    filters:
                                      description: |-
                                        Filters takes a key, value pair and allows you to filter based on supported labels.
                                        For latency, please specify a filter "le" to specify the threshold latency 
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string  
                                          operator:
                                            type: string                              
                                      type: array
                                  required:
                                  - metricName
                                  type: object
                                denominatorTotalMetrics:
                                  description: denominatorMetrics is the metric that returns total windows.
                                  properties:
                                    metricName:
                                      type: string
                                    filters:
                                      description: |-
                                        Filters takes a key, value pair and allows you to filter based on supported labels.
                                        For latency, please specify a filter "le" to specify the threshold latency 
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string  
                                          operator:
                                            type: string                              
                                      type: array
                                  required:
                                  - metricName
                                  type: object
                              required:
                              - numeratorSuccessMetrics
                              - denominatorTotalMetrics
                              - perWindowAggregation
                              - perWindowInterval
                              - category
                              type: object
                            windowQueryLanguage:
                              properties:
                                category: 
                                  description: |-
                                    category can be any of these LATENCY, AVAILABILITY, ERRORS
                                  type: string
                                qlType:
                                  type: string
                                numeratorSuccessQuery:
                                  type: string
                                denominatorTotalQuery:
                                  type: string
                              required:
                              - numeratorSuccessQuery
                              - denominatorTotalQuery
                              - category
                              type: object
                          oneOf:
                          - required: ["windowMetric"]
                          - required: ["windowQueryLanguage"]
                          type: object
                      type: object
                    target:
                      description: |-
                        Target is a string that's casted to a float64 between 0 - 100.
                        It represents the desired availability of the service in the given window.
                        It can also represent percentage of successful windows for the windowedRatio
                        float64 are not supported: https://github.com/kubernetes-sigs/controller-tools/issues/245
                      type: string
                    window:
                      description: Window within which the Target is supposed to be kept. Usually something like 1d, 7d or 28d.
                      type: string
                    description:
                      description: |-
                        Description describes the ServiceLevelObjective in more detail and
                        gives extra context for engineers that might not directly work on the service.
                      type: string
                  required:
                  - indicator
                  - target
                  - window
                  - name
                  type: object 
                minItems: 1
                type: array
            type: object
            required:
            - slos
          status:
            description: ServiceLevelObjectiveStatus defines the observed state of ServiceLevelObjective.
            properties:
              type:
                description: Type is the generated resource type, like PrometheusRule or ConfigMap
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
